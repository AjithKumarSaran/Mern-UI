{"version":3,"sources":["shared/components/UIElements/Card.js","shared/components/UIElements/Avatar.js","user/components/UserItem.js","user/components/UsersList.js","user/pages/Users.js"],"names":["Card","props","className","style","children","Avatar","src","image","alt","width","height","UserItem","to","id","name","placeCount","UsersList","items","length","map","user","key","places","Users","useState","loadedUsers","setLoadedUsers","useHttpClient","isLoading","error","sendRequest","clearError","useEffect","a","responseData","users","fetchUsers","Fragment","ErrorModal","onClear","LoadingSpinner"],"mappings":"qGAAA,0BAYeA,IARF,SAAAC,GACX,OACE,yBAAKC,UAAS,eAAUD,EAAMC,WAAaC,MAAOF,EAAME,OACrDF,EAAMG,Y,uLCSEC,G,YAZA,SAAAJ,GACb,OACE,yBAAKC,UAAS,iBAAYD,EAAMC,WAAaC,MAAOF,EAAME,OACxD,yBACEG,IAAKL,EAAMM,MACXC,IAAKP,EAAMO,IACXL,MAAO,CAAEM,MAAOR,EAAMQ,MAAOC,OAAQT,EAAMQ,Y,QCiBpCE,EAtBE,SAAAV,GAEb,OACI,wBAAIC,UAAU,aACV,kBAACF,EAAA,EAAD,CAAME,UAAU,sBACZ,kBAAC,IAAD,CAAMU,GAAE,WAAMX,EAAMY,GAAZ,YACJ,yBAAKX,UAAU,oBACX,kBAAC,EAAD,CACIK,MAAK,wDAAmDN,EAAMM,OAE9DC,IAAKP,EAAMa,QAEnB,yBAAKZ,UAAU,mBACX,4BAAKD,EAAMa,MACX,4BAAKb,EAAMc,WAAX,IAA6C,IAArBd,EAAMc,WAAmB,QAAU,eCepEC,G,MA3BG,SAAAf,GACd,OAA2B,IAAvBA,EAAMgB,MAAMC,OAEZ,yBAAKhB,UAAU,UACX,kBAACF,EAAA,EAAD,KACI,iDAOR,wBAAIE,UAAU,cACbD,EAAMgB,MAAME,KAAI,SAAAC,GAAI,OACjB,kBAAC,EAAD,CACCC,IAAKD,EAAKP,GACVA,GAAIO,EAAKP,GACTN,MAAOa,EAAKb,MACZO,KAAMM,EAAKN,KACXC,WAAYK,EAAKE,OAAOJ,e,wBCatBK,UAjCD,WACZ,MAAsCC,qBAAtC,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAoDC,cAA7CC,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,MAAOC,EAAzB,EAAyBA,YAAaC,EAAtC,EAAsCA,WAgBtC,OAdAC,qBAAU,YACQ,uCAAG,4BAAAC,EAAA,+EAEYH,EACzB,2DAHa,OAETI,EAFS,OAOfR,EAAeQ,EAAaC,OAPb,uGAAH,qDAUhBC,KACC,CAACN,IAGF,kBAAC,IAAMO,SAAP,KACE,kBAACC,EAAA,EAAD,CAAYT,MAAOA,EAAOU,QAASR,IAClCH,GACC,yBAAK1B,UAAU,UACb,kBAACsC,EAAA,EAAD,QAGFZ,GAAaH,GACb,kBAAC,EAAD,CAAWR,MAAOQ","file":"static/js/8.f846dfa5.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './UserItem.css';\nimport Avatar from '../../shared/components/UIElements/Avatar';\nimport Card from '../../shared/components/UIElements/Card';\nconst UserItem = props => {\n\n    return (\n        <li className=\"user-item\"> \n            <Card className=\"user-item__content\">\n                <Link to={`/${props.id}/places`}>\n                    <div className=\"user-item__image\">\n                        <Avatar \n                            image={`https://mern-application-places.herokuapp.com/${props.image}`}\n                            // image={`http://localhost:5000/${props.image}`}\n                            alt={props.name}/>    \n                    </div>\n                    <div className=\"user-item__info\">\n                        <h2>{props.name}</h2>\n                        <h3>{props.placeCount} {props.placeCount === 1 ? \"Place\" : \"Places\"}</h3>\n                    </div> \n                </Link>\n            </Card>\n        </li>\n    );\n};\n\nexport default UserItem;","import React from 'react';\n\nimport UserItem from './UserItem';\nimport Card from '../../shared/components/UIElements/Card';\n\nimport './UsersList.css';\n\nconst UsersList = props => {\n    if (props.items.length === 0) {\n        return (\n        <div className=\"center\">\n            <Card>\n                <h2>No Users Found.</h2>\n            </Card>\n        </div>\n        );\n    }\n\n    return (\n        <ul className=\"users-list\">\n        {props.items.map(user => (\n            <UserItem \n             key={user.id} \n             id={user.id} \n             image={user.image}\n             name={user.name}\n             placeCount={user.places.length} />\n        )\n        )}\n    </ul>\n    );\n    \n};\n\nexport default UsersList;","import React, {useEffect, useState} from 'react';\n\nimport UsersList from '../components/UsersList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport {useHttpClient} from '../../shared/hooks/http-hook';\nconst Users = () => {\n  const [loadedUsers, setLoadedUsers] = useState();\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try{\n        const responseData = await sendRequest(\n          'https://mern-application-places.herokuapp.com/api/users'\n          // 'http://localhost:5000/api/users'\n        );\n      \n        setLoadedUsers(responseData.users);\n      } catch (err) {}\n    };\n    fetchUsers();\n  }, [sendRequest]);\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError}/>\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner/>\n        </div>\n      )}\n      {!isLoading && loadedUsers && (\n        <UsersList items={loadedUsers}/> \n      )}\n    </React.Fragment>\n  ) \n}\n\nexport default Users;\n"],"sourceRoot":""}