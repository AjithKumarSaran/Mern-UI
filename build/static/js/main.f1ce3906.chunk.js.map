{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/BackDrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","logoutTimer","MainHeader","children","NavLinks","auth","useContext","to","exact","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawer","Fragment","BackDrop","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.f1ce3906.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  token: null,\n  login: () => {},\n  logout: () => {}\n});\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './BackDrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import {useState, useCallback, useEffect} from 'react';\n\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n\n\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationDate = \n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem(\n      'userData',\n      JSON.stringify({\n        userId: uid, \n        token: token,\n        expiration: tokenExpirationDate.toISOString()\n      })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    localStorage.removeItem('userData');\n  }, []);\n\n  useEffect(() => {\n    if(token && tokenExpirationDate){\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  useEffect(()=> {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    if (\n      storedData && \n      storedData.token && \n      new Date(storedData.expiration) > new Date()\n    ) {\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\n    }\n  }, [login]);\n\n  return {token, login, logout, userId};\n}","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { AuthContext } from '../../context/auth-context';\nimport './Navlinks.css';\n\nconst NavLinks = props => {\n\n    const auth = useContext(AuthContext);\n\n    return (\n        <ul className=\"nav-links\">\n            <li>\n                <NavLink to=\"/\" exact>ALL USERS</NavLink>\n            </li>\n            {auth.isLoggedIn && (\n                <li>\n                <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\n            </li>\n            )}\n            {auth.isLoggedIn && (\n                <li>\n                <NavLink to=\"/places/new\">ADD PLACE</NavLink>\n            </li>\n            )}\n            {!auth.isLoggedIn && (\n                <li>\n                <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\n            </li>\n            )}\n            {auth.isLoggedIn && (\n                <li>\n                    <button onClick={auth.logout}>LOGOUT</button>\n                </li>\n            )}\n        </ul>\n    );\n}\n\nexport default NavLinks;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {CSSTransition} from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n       const content = (\n        <CSSTransition in={props.show} timeout={200} classNames=\"slide-in-left\" mountOnEnter unmountOnExit>\n        <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n        </CSSTransition>\n       )\n\n       return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n    }\n\nexport default SideDrawer;","import React, {useState} from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport BackDrop from '../UIElements/BackDrop';\n\nimport './MainNavigation.css';\n\nconst MainNavigation = props => {\n\n    const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n  \n  const openDrawer = () =>{\n      setDrawerIsOpen(true);\n  }\n\n  const closeDrawer = () =>{\n    setDrawerIsOpen(false);\n}\n    return (\n      <React.Fragment>\n          {drawerIsOpen && <BackDrop onClick={closeDrawer}/>}\n            <SideDrawer show={drawerIsOpen} onClick={closeDrawer}>\n        <nav className=\"main-navigation__drawer-nav\">\n            <NavLinks/>\n        </nav>\n             </SideDrawer>\n    <MainHeader>\n      <button className=\"main-navigation__menu-btn\" onClick={openDrawer}>\n        <span />\n        <span />\n        <span />\n      </button>\n      <h1 className=\"main-navigation__title\">\n        <Link to=\"/\">YourPlaces</Link>\n      </h1>\n      <nav className=\"main-navigation__header-nav\">\n        <NavLinks/>\n      </nav>\n    </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n// ","import React, {Suspense} from 'react';\nimport {BrowserRouter as Router, Route, Redirect, Switch}  from 'react-router-dom';\n\n// import Users from './user/pages/Users';\n// import NewPlace from './places/pages/NewPlace';\n// import UserPlaces from './places/pages/UserPlaces';\n// import UpdatePlace from './places/pages/UpdatePlace';\n// import Auth from './user/pages/Auth';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport {AuthContext} from './shared/context/auth-context';\nimport {useAuth} from './shared/hooks/auth-hook';\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\n\n\nconst Users = React.lazy(() => import('./user/pages/Users'));\nconst NewPlace = React.lazy(() => import('./places/pages/NewPlace'));\nconst UserPlaces = React.lazy(() => import('./places/pages/UserPlaces'));\nconst UpdatePlace = React.lazy(() => import('./places/pages/UpdatePlace'));\nconst Auth = React.lazy(() => import('./user/pages/Auth'));\n\n// import MainHeader from './shared/components/Navigation/MainHeader';\nconst App = () => {\n  const {token, login, logout, userId} = useAuth();\n  \n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\" exact>\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  }else {\n    routes =(\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\" exact>\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n\n    );\n  }\n\n  return (\n    <AuthContext.Provider \n    value={{\n      isLoggedIn: !!token,\n      token: token,\n      userId: userId,\n      login: login, \n      logout: logout}}>\n      <Router>\n      <MainNavigation/>\n        <main>\n          <Suspense\n            fallback={\n              <div className=\"center\">\n                <LoadingSpinner/>\n              </div>\n            }\n          >\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}