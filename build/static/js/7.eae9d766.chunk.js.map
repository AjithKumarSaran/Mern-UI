{"version":3,"sources":["shared/components/UIElements/Card.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js"],"names":["Card","props","className","style","children","Map","PlaceItem","useHttpClient","isLoading","error","sendRequest","clearError","auth","useContext","AuthContext","useState","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","a","id","Authorization","token","onDelete","Fragment","ErrorModal","onclear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","inverse","danger","LoadingSpinner","asOverlay","src","image","alt","title","description","userId","creatorId","to","PlaceList","items","length","map","place","key","creator","coordinates","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","useEffect","responseData","places","fetchPlaces","onClear","deletedPlaceId","prevPlaces","filter"],"mappings":"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","file":"static/js/7.eae9d766.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, {useEffect} from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport './Map.css';\n\nconst Map = props => {\n    \n    return <p>hello</p>\n}\n\nexport default Map;","import React, {useState, useContext} from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Button from '../../shared/components/FormElements/Button';\nimport Modal from '../../shared/components/UIElements/Modal';\nimport Map from '../../shared/components/UIElements/Map';\nimport {AuthContext} from '../../shared/context/auth-context';\nimport {useHttpClient} from '../../shared/hooks/http-hook';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\n\nimport './PlaceItem.css';\n\nconst PlaceItem = props => {\n    const {isLoading, error, sendRequest, clearError} = useHttpClient();\n    const auth = useContext(AuthContext);\n    const [showMap, setShowMap] = useState(false);\n    const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n    const openMapHandler = () => setShowMap(true);\n\n    const closeMapHandler = () => setShowMap(false);\n\n    const showDeleteWarningHandler = () => {\n        setShowConfirmModal(true);\n    }\n\n    const cancelDeleteHandler = () => {\n        setShowConfirmModal(false);\n    }\n\n    const confirmDeleteHandler = async () => {\n        setShowConfirmModal(false);\n        try{\n            await sendRequest(\n              `https://mern-application-places.herokuapp.com/api/places/${props.id}`,\n            //   `http://localhost:5000/api/places/${props.id}`,\n              'DELETE',\n              null,\n              {\n                Authorization: 'Bearer ' + auth.token\n              }\n            );\n            props.onDelete(props.id);\n          } catch (err) {}\n    }\n\n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onclear={clearError}/>\n            <Modal \n            show={showMap} \n            onCancel={closeMapHandler}\n            header={props.address}\n            contentClass=\"place-item__modal-content\"\n            footerClass=\"place-item__modal-actions\"\n            footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\n            >\n                <div className=\"map-container\">\n                    <Map/>\n                </div>\n            </Modal>\n            <Modal \n            show={showConfirmModal}\n            onCancel={cancelDeleteHandler}\n            header=\"Are you sure?\" \n            footerClass=\"place-item__modal-actions\"\n            footer={\n                <React.Fragment>\n                    <Button inverse onClick={cancelDeleteHandler}>CANCEL</Button>\n                    <Button danger onClick={confirmDeleteHandler}>DELETE</Button>\n                </React.Fragment>\n            }>\n                <p>Do you want to proceed and delete this place?</p>\n            </Modal>\n        <li className=\"place-item\">\n            <Card className=\"place-item__Content\">\n            {isLoading && <LoadingSpinner asOverlay/>}\n            <div className=\"place-item__image\">\n                <img src={`https://mern-application-places.herokuapp.com/${props.image}`} alt={props.title} />\n                {/* <img src={`http://localhost:5000/${props.image}`} alt={props.title} /> */}\n            </div>\n            <div className=\"place-item__info\">\n                <h2>{props.title}</h2>\n                <h3>{props.address}</h3>\n                <p>{props.description}</p>\n            </div>\n            <div className=\"place-item__actions\">\n                <Button inverse onClick={openMapHandler}>VIEW ON MAP</Button>\n                {auth.userId === props.creatorId && <Button to={`/places/${props.id}`}>EDIT</Button>}\n                {auth.userId === props.creatorId && <Button danger onClick={showDeleteWarningHandler}>DELETE</Button>}\n            </div>\n            </Card>\n        </li>\n        </React.Fragment>\n        \n    )\n};\n\nexport default PlaceItem;","import React from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport PlaceItem from './PlaceItem';\nimport Button from '../../shared/components/FormElements/Button';\n\nimport './PlaceList.css';\n\nconst PlaceList = props => {\n    if (props.items.length === 0) {\n        return (\n            <div className=\"place-list center\">\n                <Card>\n                    <h2>No Places Found. Maybe create one?</h2>\n                    <Button to=\"/places/new\">Share Place</Button>\n                    {/* <button>Share Place</button> */}\n                </Card>\n            </div>\n        );\n    }\n\n    return <ul className=\"place-list\">\n        {props.items.map(place => (\n        <PlaceItem \n        key={place.id}\n        id={place.id}\n        image={place.image}\n        title={place.title}\n        description={place.description}\n        address= {place.address}\n        creatorId={place.creator}\n        coordinates={place.location}\n        onDelete={props.onDeletePlace}\n        />\n        ))}\n    </ul>\n};\n\nexport default PlaceList;","import React, { useEffect, useState } from 'react';\nimport {useParams} from 'react-router-dom';\n\nimport PlaceList from '../components/PlaceList';\nimport {useHttpClient} from '../../shared/hooks/http-hook';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\n\nconst UserPlaces = () => {\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n  const [loadedPlaces, setLoadedPlaces] = useState();\n\n  const userId = useParams().userId;\n\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try{\n        const responseData = await sendRequest(\n          `https://mern-application-places.herokuapp.com/api/places/user/${userId}`\n          // `http://localhost:5000/api/places/user/${userId}`\n          );\n        setLoadedPlaces(responseData.places)\n      } catch(err){}\n    };\n    fetchPlaces();\n  },[sendRequest, userId]);\n\n  const placeDeletedHandler = deletedPlaceId => {\n    setLoadedPlaces(prevPlaces => \n      prevPlaces.filter(place => place.id !== deletedPlaceId)\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError}/>\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner/>\n        </div>\n      )}\n      {!isLoading && loadedPlaces && \n      <PlaceList \n      items={loadedPlaces}\n      onDeletePlace={placeDeletedHandler}/>\n      }\n      \n\n    </React.Fragment>\n  )\n};\n\nexport default UserPlaces;"],"sourceRoot":""}